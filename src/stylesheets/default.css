/* Default application styles */
body {
	background-color: rgb(240, 240, 240);
	color: #000;
	font-family: Helvetica Neue;
	font-size: 17px;
	font-weight: 300;
	overflow: hidden;
	margin: 0;
	padding: 0;
	-webkit-user-select: none;
	-webkit-text-size-adjust: none;
}

/* Hide the header & footer content by default */
#header *, #footer * {
	display: none;
}

/* Header title */
h1 {
	margin: 0;
	background-color: rgb(248, 248, 248);
	border-bottom: 1px solid rgb(200, 199, 204);
	display: block;
	font-size: inherit;
	font-weight: 500;
	padding: 11px 100px;
	text-align: center;
}

/* Footer title */
footer {
	height:33px;
	background-color: rgb(248, 248, 248);
	border-top: 1px solid rgb(200, 199, 204);
	display: block;
	font-weight: 500;
	padding: 10px 0 15px 0;
	text-align: center;
}

/* Main content wrapper (for animating view transitions) */
#contentWrapper {
	position: relative;
	transition-duration: 300ms;
	transition-property: transform;
}

/* Hide the content wrapper while content is being loaded */
#contentWrapper.loading {
	visibility: hidden;
	transform: translateX(100%);
}

/* Show the content wrapper once the content has finished loading */
#contentWrapper.loaded {
	visibility: visible;
	transform: translateX(0%);
}

/* Now loading indicator */
#nowLoading {
	margin: 20px auto;
	background: url(../images/loading.gif) no-repeat;
	height: 40px;
	padding-left: 40px;
	width: 200px;
	position: relative;
	display: none;
	font-weight: 500;
}

/* Show the now loading indicator while content is being loaded */
#nowLoading.loading {
	display: block;
}

/* Default buttons */
a.button {
	position: absolute;
	overflow: hidden;
	padding: 0 3px;
	line-height: 30px;
	color: rgb(0, 122, 255);
	text-overflow: ellipsis;
	text-decoration: none;
	white-space: nowrap;
	font-weight: 400;
}

/* Position of buttons in header */
a.header {
	top: 7px;
}

/* Position of buttons in footer */
a.footer {
	bottom: 22px;
}

/* Position of left buttons */
a.left {
	left: 6px;
	right: auto;
}

/* Position of right buttons */
a.right {
	right: 6px;
}

/* Padding for back navigation buttons */
a.backButton {
	padding-left: 20px;
}

/* Chevron glyph for back navigation buttons */
a.backButton:before {
	content: "";
	position:absolute;
	width: 10px;
	height: 10px;
	top: 8px;
	left: 5px;
	border-style: solid;
	border-color: rgb(0, 122, 255);
	border-width: 0 0 3px 3px;
	transform: rotate(45deg);
}

/* Confirm action buttons */
a.confirmButton {
	font-weight: 500;
}

/* Caution action buttons */
a.cautionButton {
	color: rgb(255, 59, 48);
}

/* Scrolling lists & dialogs */
ul, #dialog {
	overflow-y: scroll;
}

/* Default scrolling lists */
ul {
	background-color: #FFF;
	padding:0;
	margin: 0;
}

/* List items */
ul li {
	margin: 0 0 0 15px;
	border-top: 1px solid #E0E0E0;
	padding: 2px 0;
	list-style: none;
}

/* List group headers */
ul li.group {
	padding: 1px 15px;
	font-weight: 500;
	background-color: rgb(240, 240, 240);
	border: 0;
	margin-left: 0;
}

/* No top border for the first item in a list or list group */
ul li.group + li, ul li:first-child:not(.group) {
	border-top: 0;
}

/* List item content */
ul li a {
	min-height: 40px;
	display: block;
	margin: -2px 0px -2px -15px;
	padding: 2px 32px 2px 15px;
	transform: rotate(0);
}

/* Chevron glyph for list items and navigating to a subview */
ul li a:before, .toView:before {
	content: "";
	position:absolute;
	width: 7px;
	height: 7px;
	right: 0;
	border-style: solid;
	border-color: rgb(200, 199, 204);
	border-width: 3px 3px 0 0;
	transform-origin: 100% 100%;
	transform: rotate(45deg) translate(0%, 240%);
}

/* Highlighted list items */
ul li a.warning {
	background-color: rgb(255, 255, 222);
}

/* Hide the chevron images for lists that use a helper */
ul.withHelper li a:before {
	display: none;
}

/* Prevent list items from running under helper */
ul.withHelper li {
	margin-right: 27px;
}

/* No right padding for lists that use a helper */
ul.withHelper li a {
	padding-right: 5px;
}

/* Chevron image for list items in edit mode */
ul.edit li a:before {
	content: "i";
	position:absolute;
	width: 20px;
	height: 20px;
	top: 12px;
	right: 5px;
	border-radius: 14px;
	border: 1px solid rgb(200, 199, 204);
	text-align: center;
	font-family: serif;
	color: rgb(200, 199, 204);
	line-height: 20px;
	transform-origin: 100% 100%;
	transform: rotate(0);
}

/* Delete image for list items in delete mode */
ul.delete li a:before {
	content: "\2013";
	position:absolute;
	width: 20px;
	height: 20px;
	top: 12px;
	right: 6px;
	background-color: rgb(255, 45, 85);
	border-radius: 14px;
	border: 0;
	text-align: center;
	color: #FFF;
	line-height: 16px;
	transform-origin: 100% 100%;
	transform: rotate(0);
}

/* Episode status indicators for episode list */
ul li a.status {
	margin-left: -10px;
	border-left: 5px solid transparent;
}

/* Use double status indicators for unverified episodes */
ul li a.status.Unverified {
	border-left-style: double;
}

/* Watched status indicators for episode list */
ul li a.Watched {
	border-left-color: rgb(76, 217, 100);
}

/* Recorded status indicators for episode list */
ul li a.Recorded {
	border-left-color: rgb(255, 45, 85);
}

/* Expected status indicators for episode list */
ul li a.Expected {
	border-left-color: rgb(255, 204, 0);
}

/* Missed status indicators for episode list */
ul li a.Missed {
	border-left-color: rgb(142, 142, 147);
}

/* List item content subtext */
ul li a div.subText {
	font-size: 12px;
	color: rgb(111, 111, 116);
}

/* Progress bars */
div.progressBar {
	background-color: rgb(142, 142, 147);
	height: 14px;
	font-size: 12px;
	overflow: hidden;
}

/* Progress bar sections */
div.progressBar div {
	float: left;
	height: inherit;
	text-align: center;
}

/* Totals in progress bars */
div.progressBar div.total {
	float: right !important;
	padding-right: 2px;
	color: #FFF;
}

/* Watched section in progress bars */
div.progressBar div.watched {
	background-color: rgb(76, 217, 100);
}

/* Recorded section in progress bars */
div.progressBar div.recorded {
	background-color: rgb(255, 45, 85);
	color: #FFF;
}

/* Expected section in progress bars */
div.progressBar div.expected {
	background-color: rgb(255, 204, 0);
}

/* Dialog sections */
section {
	padding-top: 20px
}

/* Dialog titles */
h2 {
	margin: 10px 0 6px 15px;
	font-size: 14px;
	font-weight: 300;
	color: rgb(111, 111, 116);
	text-transform: uppercase;
}

/* Dialog rows */
.row  {
	background: #FFF;
	min-height: 42px;
	padding-left: 15px;
	border-bottom: 1px solid #E0E0E0;
	white-space: nowrap;
	overflow: hidden;
	transform: rotate(0);
	display: flex;
}

/* Top border for first row in a dialog or dialog section */
h2 + .row, .row:first-child {
	border-top: 1px solid #E0E0E0;
}

/* First row in a dialog with no preceding header */
.row:first-child {
	margin-top: 33px;
}

/* Overlay to make offset separators between dialog rows */
.row + .row:after {
	content: "";
	position: absolute;
	width: 15px;
	height: 1px;
	left: 0px;
	background-color: inherit;
	transform: translateY(-1px);
}
/* Dialog labels */
label {
	line-height: 40px;
	display: inline-block;
	min-width: 105px;
}

/* Dialog text content */
p {
	margin: 8px 15px;
	color: rgb(111, 111, 116);
}

/* Dialog fields */
input:not([type="radio"]), select {
	border: none;
	height: 40px;
	width: 100%;
	font-family: inherit;
	font-weight: inherit;
	font-size: inherit;
	background: transparent;
	outline: none;
	appearance: none;
}

/* Episode status toggles */
.row #watched, .row #recorded, .row #expected, .row #missed {
	height: 25px;
	width: 25px;
	border-width: 2px;
	border-style: solid;
	border-radius: 14px;
	display: inline-block;
	margin-right: 10px;
	position: relative;
	top: 7px;
	transition: background-color .25s ease-in-out;
}

/* Watched episode status toggle (unselected) */
.row #watched {
	border-color: rgb(76, 217, 100);
}

/* Watched episode status toggle (selected) */
.row #watched.status {
	background-color: rgb(76, 217, 100);
}

/* Recorded episode status toggle (unselected) */
.row #recorded {
	border-color: rgb(255, 45, 85);
}

/* Recorded episode status toggle (selected) */
.row #recorded.status {
	background-color: rgb(255, 45, 85);
}

/* Expected episode status toggle (unselected) */
.row #expected {
	border-color: rgb(255, 204, 0);
}

/* Expected episode status toggle (selected) */
.row #expected.status {
	background-color: rgb(255, 204, 0);
}

/* Missed episode status toggle (unselected) */
.row #missed {
	border-color: rgb(111, 111, 116);
}

/* Missed episode status toggle (selected) */
.row #missed.status {
	background-color: rgb(111, 111, 116);
}

/* Buttons in dialog rows */
.row a.button {
	line-height: 40px;
}

/* Hide browser default checkbox style */
input[type="checkbox"] {
	max-height: 0;
	max-width: 0;
	opacity: 0;
	margin: 0;
}

/* Background for checkbox sliders */
input[type="checkbox"] + label {
	display: inline-block;
	position: relative;
	box-shadow: inset 0 0 0px 1px #d5d5d5;
	height: 30px;
	width: 50px;
	border-radius: 15px;
	top: 6px;
	min-width: 0;
	margin-bottom: -1px;
}

/* Left side of checkbox slider (unchecked) */
input[type="checkbox"] + label:before {
	content: "";
	position: absolute;
	display: block;
	height: 30px;
	width: 30px;
	left: 0;
	border-radius: 15px;
	transition: .25s ease-in-out;
}

/* Right side of checkbox slider (unchecked) */
input[type="checkbox"] + label:after {
	content: "";
	position: absolute;
	display: block;
	height: 30px;
	width: 30px;
	left: 0px;
	border-radius: 15px;
	background: white;
	box-shadow: inset 0 0 0 1px rgba(0,0,0,.2), 0 2px 4px rgba(0,0,0,.2);
	transition: .25s ease-in-out;
}

/* Left side of checkbox slider (checked) */
input[type="checkbox"]:checked + label:before {
	width: 50px;
	background: rgba(19,191,17,1);
}

/* Right side of checkbox slider (checked) */
input[type="checkbox"]:checked + label:after {
	left: 20px;
	box-shadow: inset 0 0 0 1px rgba(19,191,17,1), 0 2px 4px rgba(0,0,0,.2);
}

/* Hide registration message, sync controls, progress bar, status row, sync error & import changes only rows by default */
#registrationMessage, #syncControls, #progress, #statusRow, #syncErrors, #importChangesOnlyRow {
	display: none;
}

/* Sync errors */
#syncErrors ul li {
	text-align: left;
}

/* Notices stack */
#notices {
	position: absolute;
	visibility: hidden;
	z-index: 1000;
	width: 100%;
	background: rgba(0, 0, 0, 0.7);
}

/* Notices */
div.notice {
	min-height: 60px;
	border-top: 1px solid rgb(240, 240, 240);
}

/* Notice buttons */
div.notice a.button {
	padding-top: 7px;
}

/* Notice content */
div.notice p {
	padding: 10px 5px 10px 50px;
	margin: 0;
	color: rgb(248, 248, 248);
}
