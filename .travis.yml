language: ruby
os: osx
osx_image: xcode10.3

# Cache gems
cache:
  bundler: true
  directories:
    - node_modules

env:
  global:
    - TVMANAGER_COUCHDB_URL=http://localhost:5984/tvm  # Database URL
    - CC_TEST_REPORTER_ID=1fdb47c1e2af8a9d9bbcb07b77d4286bbe4a80d7a249202161991318e1569d28

addons:
  homebrew:
    packages:
      - couchdb

before_install:
  - export TZ=Australia/Sydney          # Use local timezone
  - export DEVICE="iPhone X (12.4)"     # Preferred test device
  - export DEVICE_UDID=$(instruments -s devices | grep "$DEVICE" | sed -E 's/.*\[([0-9A-F-]+)\].*/\1/g')
  - xcrun simctl shutdown all           # Make sure all other simulators are shutdown
  - xcrun simctl boot $DEVICE_UDID      # Boot the preferred test device
  - gem install bundler                 # Remove this once bundler 2.x is installed by default
  - nvm install                         # Install node version from .nvmrc
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-darwin-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter

install:
  - bundle install --without production --path=${BUNDLE_PATH:-vendor/bundle}  # Install ruby gems, excluding production only gems such as unicorn (already present by default in Travis)
  - npm ci                              # Install npm dependencies

# Setup the database
before_script:
  - couchdb -b                          # Run couch as a background process
  - bundle exec rake db:migrate

# Run the test suite
script:
  - bundle exec rubocop -ESP            # Backend linting
  - bundle exec rake spec               # Backend specs
  - npm test                            # Frontend linting and specs

# Pipe the JS coverage data to Code Climate
after_script:
  - ./cc-test-reporter format-coverage -t simplecov -o coverage/codeclimate.backend.json coverage/backend/.resultset.json # Format backend coverage
  - ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.frontend.json coverage/frontend/lcov.info  # Format frontend coverage
  - ./cc-test-reporter sum-coverage coverage/codeclimate.*.json -p 2                  # Sum both coverage parts into coverage/codeclimate.json
  - if [[ "$TRAVIS_TEST_RESULT" == 0 ]]; then ./cc-test-reporter upload-coverage; fi  # Upload coverage/codeclimate.json