{
  "name": "tvmanager",
  "version": "1.0.0",
  "description": "Tracks recorded, watched & upcoming TV shows",
  "keywords": [
    "tv",
    "recording",
    "iphone"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/scottohara/tvmanager.git"
  },
  "author": "Scott O'Hara",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/scottohara/tvmanager/issues"
  },
  "homepage": "https://github.com/scottohara/tvmanager",
  "dependencies": {
    "sortablejs": "1.15.2"
  },
  "devDependencies": {
    "@4tw/cypress-drag-drop": "2.3.1",
    "@types/chai": "4.3.11",
    "@types/mocha": "10.0.6",
    "@types/sinon": "17.0.3",
    "@types/sinon-chai": "3.2.12",
    "@types/sortablejs": "1.15.8",
    "chai": "4.4.1",
    "concurrently": "8.2.2",
    "coverage-istanbul-loader": "3.0.5",
    "css-loader": "7.1.2",
    "cypress": "15.3.0",
    "eslint": "9.16.0",
    "eslint-config-oharagroup": "5.1.0",
    "html-loader": "5.1.0",
    "html-webpack-plugin": "5.6.4",
    "ignore-loader": "0.1.2",
    "karma": "6.4.2",
    "karma-chai-sinon": "0.1.5",
    "karma-chrome-launcher": "3.2.0",
    "karma-coverage-istanbul-reporter": "3.0.3",
    "karma-ios-simulator-launcher": "0.0.4",
    "karma-mocha": "2.0.1",
    "karma-mocha-reporter": "2.2.5",
    "karma-sinon": "1.0.5",
    "karma-sourcemap-loader": "0.4.0",
    "karma-webpack": "5.0.1",
    "mini-css-extract-plugin": "2.9.4",
    "mocha": "10.3.0",
    "prettier": "3.5.1",
    "process": "0.11.10",
    "pwa-asset-generator": "6.3.1",
    "sinon": "18.0.0",
    "sinon-chai": "3.7.0",
    "ts-loader": "9.5.4",
    "typescript": "5.7.2",
    "typescript-eslint": "8.17.0",
    "webpack": "5.101.3",
    "webpack-cli": "6.0.1",
    "webpack-dev-server": "5.2.2",
    "webpack-merge": "6.0.1",
    "webpack-webmanifest-loader": "2.0.2",
    "workbox-webpack-plugin": "7.3.0"
  },
  "config": {
    "DEVICE_TYPE_ID": "com.apple.CoreSimulator.SimDeviceType.iPhone-14-Pro-Max",
    "RUNTIME_ID": "com.apple.CoreSimulator.SimRuntime.iOS-18-6"
  },
  "scripts": {
    "start": "concurrently --prefix-colors auto npm:api npm:db npm:ui",
    "api": "bundle exec op run --env-file=.env -- rails server",
    "api:test": "npm run api -- --environment=test",
    "db": "postgres -D /opt/homebrew/var/postgres",
    "ui": "webpack serve --config webpack.dev.js",
    "build": "webpack --progress --config webpack.prod.js",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "lint": "eslint",
    "rspec": "bundle exec op run --env-file=.env -- rake spec",
    "cypress": "op run --env-file=.env -- cypress open --e2e",
    "start:simulator": "xcrun simctl delete tvm-simulator; xcrun simctl bootstatus $(xcrun simctl create tvm-simulator $npm_package_config_DEVICE_TYPE_ID $npm_package_config_RUNTIME_ID) -b",
    "show:simulator": "npm run start:simulator && open /Applications/Xcode.app/Contents/Developer/Applications/Simulator.app",
    "test": "npm run format:check && npm run lint && npm run test:coverage:mobile",
    "test:backend": "concurrently --prefix-colors auto --hide db --kill-others npm:db npm:rspec",
    "test:bdd": "karma start karma-bdd.conf.js",
    "test:coverage": "karma start",
    "test:coverage:chrome": "karma start --browsers ChromeHeadless",
    "test:coverage:mobile": "ENV_CMD='sleep 600' npm run start:simulator && karma start --browsers MobileSafari",
    "test:e2e": "npm run build && concurrently --prefix-colors auto --kill-others npm:api:test npm:db npm:cypress",
    "generate:splash": "rm src/images/apple-splash-*; pwa-asset-generator build/tv-splash.svg src/images --splash-only --background black --padding 0 --type png --xhtml --path-override \"<%=require('~/images\"",
    "deploy": "fly deploy --build-arg NODE_VERSION=$npm_package_engines_node --build-arg NPM_VERSION=$npm_package_engines_npm --build-arg RUBY_VERSION=$npm_package_engines_ruby",
    "deploy:staging": "npm run deploy -- --app tvmanagertest",
    "deploy:production": "npm run deploy -- --app tvmanager",
    "swap:check": "fly ssh console --command 'free'",
    "docker:build": "docker build --build-arg NODE_VERSION=$npm_package_engines_node --build-arg NPM_VERSION=$npm_package_engines_npm --build-arg RUBY_VERSION=$npm_package_engines_ruby --tag tvmanager ."
  },
  "engines": {
    "node": "22.14.0",
    "npm": "11.3.0",
    "ruby": "3.4.2"
  }
}
